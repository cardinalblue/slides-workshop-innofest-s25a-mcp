import{_ as r}from"./slidev/VClicks-C-agEnsC.js";import{b as u,o as i,w as e,g as o,e as d,v as p,x as f,C as l}from"./modules/vue-DFXR_cyy.js";import{I as m}from"./slidev/default-CK3byA6d.js";import{u as c,f as _}from"./slidev/context-Chrd4iAv.js";import"./index-C7aQrRQA.js";import"./modules/shiki-B9dSO3K3.js";const b={__name:"01-introduction.md__slidev_7",setup(C){const{$clicksContext:n,$frontmatter:s}=c();return n.setup(),(g,t)=>{const a=r;return i(),u(m,p(f(l(_)(l(s),6))),{default:e(()=>[t[1]||(t[1]=o("h1",null,"What is MCP?",-1)),t[2]||(t[2]=o("h3",null,"A Univeral Adapter for Connecting Tools Built for Agents to LLMs",-1)),d(a,null,{default:e(()=>t[0]||(t[0]=[o("ul",null,[o("li",null,[o("p",null,"If a tool is built for claude using function call, it’s doesn’t mean it’s ready for OpenAI models")]),o("li",null,[o("p",null,"However, if it’s built based on MCP, then it’s ready for lots of tools"),o("ul",null,[o("li",null,"Claude Desktop, n8n, Roo Code, Cursor…")])]),o("li",null,[o("p",null,"The protocol already define a way to let language models to know how to use the tool, so you don’t need to use prompt to teach it")]),o("li",null,[o("p",null,"Once it’s connected, what you need to do is just ask the agent to do whatever it can do with the tools available")])],-1)])),_:1,__:[0]})]),_:1,__:[1,2]},16)}}};export{b as default};
